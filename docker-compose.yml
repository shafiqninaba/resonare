services:
  data-prep:
    build:
      context: ./packages/data-prep
      dockerfile: Dockerfile
    image: resonare-data-prep:latest
    command: ["uv", "run", "app.py"]
    env_file:
      - .env
    environment:
      - UV_COMPILE_BYTECODE=1
      - UV_LINK_MODE=copy
    volumes:
      - ./packages/data-prep/conf:/app/conf
      - ./packages/data-prep/data:/app/data
    develop:
      watch:
        # only sync source code & main script
        - action: sync
          path: ./packages/data-prep/src               # host
          target: /app/src                             # container
        - action: sync
          path: ./packages/data-prep/app.py
          target: /app/app.py

  # fine-tuning:
  #   build:
  #     context: ./packages/fine-tuning
  #     dockerfile: Dockerfile
  #   image: resonare-fine-tuning:latest
  #   runtime: nvidia
  #   env_file:
  #     - .env
  #   environment:
  #     - UV_COMPILE_BYTECODE=1
  #     - UV_LINK_MODE=copy
  #   volumes:
  #     - ./packages/fine-tuning/conf:/app/conf
  #   depends_on:
  #     - data-prep
  #   develop:
  #     watch:
  #       # only sync source code & main script
  #       - action: sync
  #         path: ./packages/fine-tuning/src               # host
  #         target: /app/src                             # container
  #       - action: sync
  #         path: ./packages/fine-tuning/main.py
  #         target: /app/main.py


  # inference:
  #   build:
  #     context: ./packages/inference
  #     dockerfile: Dockerfile
  #   image: resonare-inference:latest
  #   env_file:
  #     - .env
  #   environment:
  #     - UV_COMPILE_BYTECODE=1
  #     - UV_LINK_MODE=copy
  #   volumes:
  #     - ./packages/inference/conf:/app/conf
  #   depends_on:
  #     - fine-tuning
  #   develop:
  #     watch:
  #       # only sync source code & main script
  #       - action: sync
  #         path: ./packages/inference/src               # host
  #         target: /app/src                             # container
  #       - action: sync
  #         path: ./packages/inference/main.py
  #         target: /app/main.py

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    image: resonare-frontend:latest
    command: ["uv", "run", "streamlit", "run", "main.py"]
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - DATA_PREP_URL=http://data-prep:8000
      - FINE_TUNING_URL=http://finetuning:8000
      - INFERENCE_URL=http://inference:8000
    volumes:
      - ./packages/frontend/conf:/app/conf
      - ./packages/frontend/assets:/app/assets
    depends_on:
      - data-prep
    develop:
      watch:
        - action: sync
          path: ./packages/frontend/main.py
          target: /app/main.py
        - action: sync
          path: ./packages/frontend/pages
          target: /app/pages
        - action: sync
          path: ./packages/frontend/utils.py
          target: /app/utils.py

networks:
  default:
    driver: bridge
